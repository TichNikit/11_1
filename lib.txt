#pandas


pandas - пакет на Python для анализа данных.

pandas предоставляет быстрые, гибкие и выразительные структуры данных для работы с "реляционными" и "помеченными" данными.

Пакет имеет широкую цель стать мощным и гибким инструментом анализа/манипулирования данными на любом языке.

pandas хорошо обрабатывает недостающие данные, изменяет размер данных, автоматически и явно выравнивает данные,
группирует данные, упрощает преобразование рваных данных, интеллектуально нарезает данные, объединяет данные, изменяет
форму и поворот данных, иерархически маркирует оси, имеет надежные инструменты ввода-вывода и функциональность для
временных рядов.

Для получения помощи по использованию pandas можно обратиться к StackOverflow, списку рассылки pydata, GitHub, Slack
и ежемесячным встречам сообщества.

Функции библиотеки Pandas на Python включают:
read_csv(). Извлекает данные из CSV-файлов в виде фрейма данных.
head(). Возвращает верхние n (по умолчанию 5) значений фрейма или серии данных.
tail(). Возвращает нижние n (по умолчанию 5) строк фрейма или серии данных.
sample(). Генерирует выборку случайной строки или столбца из фрейма данных.
info(). Генерирует сводку фрейма данных, которая включает информацию о столбцах с их именами, их типами данных и отсутствующими значениями.
dtypes(). Возвращает ряд с типом данных каждого столбца.
shape(). Возвращает кортеж, представляющий размерность фрейма данных Pandas.
size(). Возвращает количество строк в ряду.
loc(). Используется для доступа к группе строк и столбцов по меткам или логическому массиву в данном фрейме данных.
rename(). Переименовывает любой индекс, столбец или строку.
where(). Проверяет фрейм данных на наличие одного или нескольких условий и соответствующего возврата результата.

#requests

запросы

Requests - простая и элегантная HTTP-библиотека для Python.

Requests поддерживает работу с международными доменами и URL-адресами, сеансы с сохранением файлов cookie,
проверку TLS/SSL, базовую и дайджест-аутентификацию, загрузку файлов, поддержку SOCKS-прокси, тайм-ауты подключения и потоковую загрузку.

Функции библиотеки Requests в Python:
requests.get(). 23 Отправляет GET-запрос на указанный в параметре веб-сайт.
requests.post(). Отправляет POST-запрос на веб-сайт.
атрибуты объекта Response:
.content. Обеспечивает доступ к любым данным в теле запроса.
.text. Конвертирует полученные данные в строку с кодировкой UTF-8.
Классы библиотеки Requests:
Session. Позволяет сохранять устойчивость HTTP-запросов в пределах одного объекта Session.

Привер кода:
>>> import requests
>>> r = requests.get('https://httpbin.org/basic-auth/user/pass', auth=('user', 'pass'))
>>> r.status_code
200
>>> r.headers['content-type']
'application/json; charset=utf8'
>>> r.encoding
'utf-8'
>>> r.text
'{"authenticated": true, ...'
>>> r.json()
{'authenticated': True, ...}